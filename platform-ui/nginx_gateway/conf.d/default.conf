server {
    listen 8888;
    server_name localhost;

    # Optional: Add access and error logs
    # access_log /var/log/nginx/api_gateway.access.log;
    # error_log /var/log/nginx/api_gateway.error.log;

    location /api/v1/ {
        # Proxy requests to the metadata-service
        # Assumes metadata-service is resolvable (e.g., in the same Docker network)
        # and listening on port 8080.
        proxy_pass http://metadata-service:8080/api/v1/;

        # Set necessary proxy headers
        proxy_set_header Host $host; # Preserves the original host header
        proxy_set_header X-Real-IP $remote_addr; # Passes the real client IP
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # Appends client IP to list
        proxy_set_header X-Forwarded-Proto $scheme; # Indicates original request scheme (http/https)

        # Important for WebSocket if ever needed by the API
        # proxy_http_version 1.1;
        # proxy_set_header Upgrade $http_upgrade;
        # proxy_set_header Connection "upgrade";

        # Handle OPTIONS preflight requests for CORS
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*'; # Replace * with specific frontend origin in production
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
            add_header 'Access-Control-Max-Age' 1728000; # How long the results of a preflight request can be cached
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            add_header 'Content-Length' 0;
            return 204; # No Content response for OPTIONS
        }

        # Add CORS headers for actual requests
        # These are added 'always' to ensure they are present even on error responses from Nginx itself.
        add_header 'Access-Control-Allow-Origin' '*' always; # Replace * with specific frontend origin in production
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
    }

    # Optional: Default handler for other locations or root
    # location / {
    #     return 404; # Or serve a static status page
    # }
}
