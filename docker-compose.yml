version: '3.8'

networks:
  app-network:
    driver: bridge

services:
  postgres:
    image: postgres:13-alpine
    container_name: platform_postgres
    environment:
      POSTGRES_USER: platform_user
      POSTGRES_PASSWORD: platform_password
      POSTGRES_DB: platform_db
    volumes:
      - ./pgdata:/var/lib/postgresql/data # Persist database data
    ports:
      - "5432:5432" # Expose PostgreSQL port to host (optional, for debugging)
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U platform_user -d platform_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  metadata-service:
    container_name: platform_metadata_service
    build:
      context: ./metadata-service # Path to metadata-service Dockerfile directory
      dockerfile: Dockerfile
    ports:
      - "8080:8080" # Internal port, Nginx gateway will connect to this
    environment:
      GIN_MODE: release # Or debug
      PORT: 8080
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: platform_user
      DB_PASSWORD: platform_password
      DB_NAME: platform_db
      DB_SSLMODE: disable
    depends_on:
      postgres:
        condition: service_healthy # Wait for Postgres to be healthy
    networks:
      - app-network

  api-gateway:
    container_name: platform_api_gateway
    build:
      context: ./nginx_gateway # Path to nginx_gateway Dockerfile directory
      dockerfile: Dockerfile
    ports:
      - "8888:8888" # Publicly accessible port for the API Gateway
    depends_on:
      - metadata-service
    networks:
      - app-network

  frontend:
    container_name: platform_frontend_ui
    build:
      context: ./platform-ui # Path to platform-ui Dockerfile directory
      dockerfile: Dockerfile
      # Optional: Pass build arguments like VUE_APP_API_BASE_URL if needed
      # args:
      #   VUE_APP_API_BASE_URL: http://localhost:8888/api/v1
    ports:
      - "8000:80" # Publicly accessible port for the frontend UI
    depends_on:
      - api-gateway # Conceptually depends on gateway, though static files can serve independently
    networks:
      - app-network

volumes:
  pgdata: # Define the named volume for PostgreSQL data persistence
